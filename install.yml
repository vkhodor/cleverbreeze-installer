---
- hosts: localhost
  vars:
    repo_url: git@github.com:vkhodor/cleverbreeze.git

  tasks:
    - name: Turn off old services
      block:
        - name: Disable modbus-connector
          shell: update-rc.d modbus-connector disable || exit 0

        - name: Remove old modbus-connector start script
          file:
            path: /etc/init.d/modbus-connector
            state: absent

        - name: Remove cronjob for data-cleaner.py
          cron:
            name: data-cleaner job
            job: 'cd /root/snmpagg/modbus-connector/; ./data-cleaner.py > /tmp/data-clear.log'
            state: absent

        - name: Disable modbus-client
          shell: systemctl disable modbus-client || exit 0

        - name: Stop modbus-client
          shell: systemctl stop modbus-client || exit 0

        - name: Disable webgui service
          shell: systemctl disable webgui || exit 0

        - name: Stop webgui service
          shell: systemctl stop webgui || exit 0

    - name: Create .ssh directory
      file:
        path: '{{ ansible_env.HOME }}/.ssh'
        mode: '0700'
        state: directory

    - name: 'Install id_rsa'
      copy:
        src: files/ssh/id_rsa
        dest: '{{ ansible_env.HOME }}/.ssh'
        mode: '0600'

    - name: 'Install id_rsa.pub'
      copy:
        src: files/ssh/id_rsa.pub
        dest: '{{ ansible_env.HOME }}/.ssh/id_rsa.pub'
        mode: '0644'

    - name: 'Install required software'
      apt:
        name:
          - dhcpcd5
          - chrony
          - nginx
          - uwsgi
          - python3
          - python3-pip
          - git
          - sqlite3
          - vim
          - snmpd
          - build-essential
          - libdbus-glib-1-dev
          - libgirepository1.0-dev
        state: present
        force_apt_get: yes

    - name: 'Enable SNMPd'
      systemd:
        name: snmpd
        enabled: true
        state: started

    - name: Clone/Update repo
      git:
        repo: '{{ repo_url }}'
        dest: '/root/cleverbreeze-{{ version }}'
        clone: true
        update: true
        force: true
        accept_hostkey: true
        version: '{{ version }}'

    - name: Find all .git files
      find:
        patterns: '.git*'
        paths: '/root/cleverbreeze-{{ version }}'
        recurse: true
      register: git_files

    - name: Find all TODO files
      find:
        patterns: 'TODO*'
        paths: '/root/cleverbreeze-{{ version }}'
        recurse: true
      register: todo_files

    - name: Find all sqlite files
      find:
        patterns: '*.sqlite'
        paths: '/root/cleverbreeze-{{ version }}'
        recurse: true
      register: sqlite_files

    - name: Remove all found files
      file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ git_files.files + todo_files.files + sqlite_files.files }}'

    - name: Remove files
      file:
        path: '/root/cleverbreeze-{{ version }}/{{ item }}'
        state: absent
      with_items:
        - migrations
        - update.sh
        - deploy

    # TODO: will change to native debian packages system or use python venv
    # https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3
    - name: Create pip config dir
      file:
        path: /root/.config/pip
        state: directory
        mode: '0755'

    - name: Configure pip
      template:
        src: pip.conf.j2
        dest: /root/.config/pip/pip.conf

    - name: Upgrade pip3
      shell: pip3 install --upgrade pip
      changed_when: false

    - name: Install python packages
      pip:
        requirements: '/root/cleverbreeze-{{ version }}/requirements.txt'

    - name: Get old version by old link
      set_fact:
        old_version: '{{ "/root/cleverbreeze" | realpath }}'

    - name: Create symlink to new directory
      file:
        src: '/root/cleverbreeze-{{ version }}'
        dest: /root/cleverbreeze
        mode: '0777'
        state: link

    - name: 'Configure Nginx'
      block:
        - name: Copy nginx.conf
          copy:
            src: files/nginx.conf
            dest: /etc/nginx/nginx.conf
            owner: root
            group: root
            mode: '0644'

        - name: Copy cleverbreeze-ui.conf
          copy:
            src: files/cleverbreeze-ui.conf
            dest: /etc/nginx/sites-available/cleverbreeze-ui.conf

        - name: Remove default site
          file:
            path: /etc/nginx/sites-enabled/default
            state: absent

        - name: Create /run/uwsgi directory
          file:
            path: /run/uwsgi
            state: directory

        - name: Enable cleverbreeze-ui site
          file:
            src: /etc/nginx/sites-available/cleverbreeze-ui.conf
            dest: /etc/nginx/sites-enabled/cleverbreeze-ui.conf
            state: link

        - name: Restart and enable nginx
          systemd:
            name: nginx
            enabled: true
            state: restarted

    - name: Copy old data and configuration
      copy:
        src: '{{ old_version }}/{{ item }}'
        dest: '/root/cleverbreeze/{{ item }}'
        remote_src: true
      with_items:
        - cleverbreeze-ui/controllers.sqlite
        - cleverbreeze-ui/datadb.sqlite
        - cleverbreeze-ui/snmpusersdb.sqlite
        - cleverbreeze-ui/netcfg/snmpd.conf.json
        - cleverbreeze-ui/netcfg/dhcp.conf.json
      ignore_errors: true

    - name: Alembic migrations
      block:
        - name: Check database
          shell: alembic check
          args:
            chdir: /root/cleverbreeze/cleverbreeze-ui/
          changed_when: false
          failed_when: false
          register: alembic_check

        - name: Upgrade database
          shell: alembic upgrade head
          args:
            chdir: /root/cleverbreeze/cleverbreeze-ui/
          changed_when: true
          when: alembic_check.rc != 0

    - name: 'Configure Clever Breeze UI Service'
      block:
        - name: Copy uwsgi.ini
          copy:
            src: files/uwsgi.ini
            dest: '/root/cleverbreeze-{{ version }}/system/uwsgi.ini'
            mode: '0664'

        - name: Copy unit file
          copy:
            src: files/cleverbreeze-ui.service
            dest: /etc/systemd/system/cleverbreeze-ui.service
            mode: '0644'

        - name: Enable Clever Breeze UI service
          systemd:
            name: cleverbreeze-ui
            enabled: true
            daemon_reload: true
            state: restarted

    - name: Configure cleverbreeze-modbus
      block:
        - name: Copy unit
          copy:
            src: files/cleverbreeze-modbus.service
            dest: /etc/systemd/system/cleverbreeze-modbus.service

        - name: Enable cleverbreeze-modbus
          systemd:
            name: cleverbreeze-modbus
            enabled: true
            daemon_reload: true
            state: restarted

    - name: Sync FS
      shell: sync
      changed_when: false

    - name: Add cronjob real time clock syncronization every week
      cron:
        name: real time clock syncronization every week
        job: /sbin/hwclock -s
        hour: '1'
        minute: '2'
        weekday: '1'

    - name: Add Debian-snmp to root group
      user:
        name: 'Debian-snmp'
        groups: 'root'
        append: yes

    - name: Add group permisions
      file:
        path: '/root'
        mode: 0755

#    - name: Measage abount next steps
#      debug:
#        msg: |
#          If this is not new instalation you need to run data migration script
#          Also you need to regenerate snmpd (from UI) and reboot the system.
